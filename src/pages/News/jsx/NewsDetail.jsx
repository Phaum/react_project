import React, { useEffect, useState } from "react";
import { useParams, Link, useNavigate  } from "react-router-dom";
import MarkdownRenderer from "../../../UI/jsx/MarkdownRenderer";
import DownloadFile from "../../../UI/jsx/DownloadFile";
import "../css/NewsDetail.css";


const NewsDetail = () => {
    const { id } = useParams(); // –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞
    const [news, setNews] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [role, setRole] = useState("guest");
    const navigate = useNavigate(); // –•—É–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    const getToken = () => localStorage.getItem("token");

    useEffect(() => {
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
        const fetchNewsDetail = async () => {
            const token = getToken();
            const endpoint = token
                ? "http://localhost:5000/news/read"
                : "http://localhost:5000/news/read_guest";
            try {
                const response = await fetch(`http://localhost:5000/news/${id}`, {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json",
                        ...(token && { Authorization: `Bearer ${token}` }),
                    },
                });
                if (!response.ok) {
                    throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å");
                }
                const data = await response.json();
                if (token) {
                    const storedRole = localStorage.getItem("role");
                    setRole(storedRole || "guest");
                }
                setNews(data); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ—Å—Ç–∏
                // console.log("–ü—Ä–∏—à–µ–¥—à–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:", data); // üîç –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–∏:", error);
                setError(error.message);
            } finally {
                setLoading(false);
            }
        };
        fetchNewsDetail();
    }, [id]);

    const deleteNews = async (id) => {
        const token = getToken();
        try {
            const response = await fetch(`http://localhost:5000/news/${id}`, {
                method: "DELETE",
                headers: {
                    Authorization: `Bearer ${token}`,
                },
            });
            if (response.ok) {
                alert("–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞");
                navigate("/news");
            } else {
                const errorMessage = await response.text();
                alert(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å: ${errorMessage}`);
            }
        } catch (error) {
            alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏");
        }
    };

    if (loading) {
        return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
    }

    if (error) {
        return <p>–û—à–∏–±–∫–∞: {error}</p>;
    }

    if (!news) {
        return <p>–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</p>;
    }

    return (
        <div className="main-container">
            <div>
                <div><MarkdownRenderer content={news.title}/></div>
                {news.image ? (
                    <img className="news-container" src={news.image} alt={news.title} width="50%" onError={(e) => e.target.style.display = 'none'} />
                ) : null}
                <div className="detail-container">
                    <MarkdownRenderer content={news.content} />
                </div>
                <div>
                    {news.files && news.files.length > 0 && (
                        <div className="attached-files">
                            <h3>–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</h3>
                            <ul>
                                {news.files.map((file, index) => (
                                    <div key={index}>
                                        <DownloadFile file={file} />
                                    </div>
                                ))}
                            </ul>
                        </div>
                    )}
                </div>
                <div className="fixed-buttons-container">
                    <Link to="/news" className="back-link">–ù–∞–∑–∞–¥ –∫ –Ω–æ–≤–æ—Å—Ç—è–º</Link>
                    {news && news.canEdit && (
                        <>
                            <Link to={`/news/edit/${news.id}`} className="edit-button">
                                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                            </Link>
                            <button
                                onClick={() => deleteNews(news.id)}
                                className="delete-button"
                            >
                                –£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å
                            </button>
                        </>
                    )}
                </div>
            </div>
        </div>
    );
};

export default NewsDetail;
